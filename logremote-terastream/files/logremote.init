#!/bin/sh /etc/rc.common
# Copyright (C) 2013 OpenWrt.org

# start after and stop before networking
START=22
STOP=89
PIDCOUNT=0

USE_PROCD=1
PROG=/sbin/logread

INTERFACE=wan

LOG_PORT=514
LOG_PROTO="udp"
LOG_TRAILER_NULL=0
LOG_PREFIX=""

_get_collector_addresses()
{
	json_init
	json_load "$(ifstatus $INTERFACE)"

	local collector_addresses

	json_select data 2>/dev/null || return
	json_select syslog_collectors 2>/dev/null || return
	json_get_values collector_addresses

	echo "$collector_addresses"
}

start_service_remote()
{
	PIDCOUNT="$(( ${PIDCOUNT} + 1))"
	local pid_file="/var/run/logread.${PIDCOUNT}.pid"

	local collector_addresses="$(_get_collector_addresses)"
	for collector_address in $collector_addresses; do
		/sbin/validate_data ip6addr "$collector_address" 2>/dev/null || continue

		procd_open_instance
			procd_set_param command "$PROG" -f -r "$collector_address" "${LOG_PORT}" -p "$pid_file"
			case "${LOG_PROTO}" in
				"udp") procd_append_param command -u;;
				"tcp") [ "${LOG_TRAILER_NULL}" -eq 1 ] && procd_append_param command -0;;
			esac
			[ -z "${LOG_PREFIX}" ] || procd_append_param command -P "${LOG_PREFIX}"
		procd_close_instance
	done
}

send_bootlog()
{

	[ -f /tmp/dmesgboot.log ] && {
		local collector_addresses="$(_get_collector_addresses)"
		for collector_address in $collector_addresses; do
			logger -t bootlog -n ${collector_address} -f /tmp/dmesgboot.log
		done

		rm -f /tmp/dmesgboot.log
	}
}

service_triggers()
{
	procd_add_reload_interface_trigger "$INTERFACE"
}

start_service()
{
	start_service_remote
	send_bootlog
}
